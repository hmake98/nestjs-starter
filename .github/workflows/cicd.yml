name: Deploy NestJS to Amazon ECS

on:
  push:
    branches:
      - develop # for dev environment
      - staging # for staging environment
      - master # for production environment

env:
  AWS_REGION: us-east-1 # Change this to your AWS region

jobs:
  deploy:
    name: Deploy to Amazon ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set environment variables
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/develop' ]]; then
            echo "ENV=dev" >> $GITHUB_ENV
            echo "ECR_REPOSITORY=nestjs-app-dev" >> $GITHUB_ENV
            echo "ECS_SERVICE=nestjs-service-dev" >> $GITHUB_ENV
            echo "ECS_CLUSTER=nestjs-cluster-dev" >> $GITHUB_ENV
          elif [[ ${{ github.ref }} == 'refs/heads/staging' ]]; then
            echo "ENV=stage" >> $GITHUB_ENV
            echo "ECR_REPOSITORY=nestjs-app-stage" >> $GITHUB_ENV
            echo "ECS_SERVICE=nestjs-service-stage" >> $GITHUB_ENV
            echo "ECS_CLUSTER=nestjs-cluster-stage" >> $GITHUB_ENV
          elif [[ ${{ github.ref }} == 'refs/heads/master' ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
            echo "ECR_REPOSITORY=nestjs-app-prod" >> $GITHUB_ENV
            echo "ECS_SERVICE=nestjs-service-prod" >> $GITHUB_ENV
            echo "ECS_CLUSTER=nestjs-cluster-prod" >> $GITHUB_ENV
          fi

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: nestjs-app-${{ env.ENV }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
