name: Build and Deploy

on:
    push:
        branches: [main, master, staging]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build:
        runs-on: ubuntu-latest

        permissions:
            contents: read
            packages: write

        outputs:
            image-tag: ${{ steps.meta.outputs.tags }}
            image-digest: ${{ steps.build.outputs.digest }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Log in to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=sha,prefix={{branch}}-
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push Docker image
              id: build
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./ci/Dockerfile.prod
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  platforms: linux/amd64,linux/arm64

    deploy-staging:
        needs: build
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/staging'

        steps:
            - name: Deploy to staging
              run: |
                  echo "Deploying to staging environment..."
                  echo "Image: ${{ needs.build.outputs.image-tag }}"
                  # Add your staging deployment commands here
                  # Example: kubectl, docker-compose, or API calls to your hosting provider

    deploy-production:
        needs: build
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

        steps:
            - name: Deploy to production
              run: |
                  echo "Deploying to production environment..."
                  echo "Image: ${{ needs.build.outputs.image-tag }}"
                  # Add your production deployment commands here
                  # Example: kubectl, docker-compose, or API calls to your hosting provider
